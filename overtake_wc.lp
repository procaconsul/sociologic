
%%%%%%%%%%%%%%%%%%%%%%%%%%%% Background Knowledge

% wall 1 
%point(w1_s, 10, 20).
%point(w1_e, 60, 20).
%start(w1_s, wall1).
%end(w1_e, wall1).
%line(wall1). 

% wall 2 
%point(w2_s, 10, 10).
%point(w2_e, 60, 10).
%start(w2_s, wall2).
%end(w2_e, wall2).
%line(wall2). 


%pos(agent1, 1, p1_1).
%pos(agent1, 2, p1_2).
%pos(agent1, 3, p1_3).
%pos(agent1, 4, p1_4).
%pos(agent1, 5, p1_5).
%pos(agent1, 6, p1_6).
%pos(agent1, 7, p1_7).
%pos(agent1, 8, p1_8).
%pos(agent1, 9, p1_9).
%pos(agent1, 10, p1_10).
%pos(agent1, 11, p1_11).
%pos(agent1, 12, p1_12).
%pos(agent1, 13, p1_13).
%
%o_point(p1_1, "40.551", "12.880", "0.0").
%o_point(p1_2, "41.551", "12.876", "0.0").
%o_point(p1_3, "42.551", "12.877", "0.0").
%o_point(p1_4, "43.551", "12.876", "0.0").
%o_point(p1_5, "44.551", "12.878", "0.0").
%o_point(p1_6, "45.551", "12.880", "0.0").
%o_point(p1_7, "46.551", "12.881", "0.0").
%o_point(p1_8, "47.551", "12.879", "0.0").
%o_point(p1_9, "48.551", "12.879", "0.0").
%o_point(p1_10, "49.551", "12.879", "0.0").
%o_point(p1_11, "50.544", "12.879", "0.0").
%o_point(p1_12, "51.551", "12.879", "0.0").
%o_point(p1_13, "52.551", "12.879", "0.0").
%
%pos(agent2, 1, p2_1).
%pos(agent2, 2, p2_2).
%pos(agent2, 3, p2_3).
%pos(agent2, 4, p2_4).
%pos(agent2, 5, p2_5).
%pos(agent2, 6, p2_6).
%pos(agent2, 7, p2_7).
%pos(agent2, 8, p2_8).
%pos(agent2, 9, p2_9).
%pos(agent2, 10, p2_10).
%pos(agent2, 11, p2_11).
%pos(agent2, 12, p2_12).
%pos(agent2, 13, p2_13).
%
%o_point(p2_1, "38.551", "12.880", "0.0").
%o_point(p2_2, "40.551", "12.876", "0.0").
%o_point(p2_3, "41.580", "12.877", "0.0").
%o_point(p2_4, "44.551", "12.800", "0.0").
%o_point(p2_5, "46.551", "12.878", "0.0").
%o_point(p2_6, "48.551", "12.880", "0.0").
%o_point(p2_7, "50.551", "12.881", "0.0").
%o_point(p2_8, "52.551", "12.879", "0.0").
%o_point(p2_9, "54.551", "12.879", "0.0").
%o_point(p2_10, "56.551", "12.879", "0.0").
%o_point(p2_11, "58.544", "12.879", "0.0").
%o_point(p2_12, "60.551", "12.879", "0.0").
%o_point(p2_13, "62.551", "12.879", "0.0").
%

%o_point(p2_1, "38.551", "12.880", 0).
%o_point(p2_2, "40.551", "13.876", 2).
%o_point(p2_3, "42.580", "15.002", 0).
%o_point(p2_4, "44.551", "15.876", 0).
%o_point(p2_5, "46.551", "14.878", -2).
%o_point(p2_6, "48.551", "13.880", -2).
%o_point(p2_7, "50.551", "12.881", 0).
%o_point(p2_8, "52.551", "12.879", 0).
%o_point(p2_9, "54.551", "12.879", 0).
%o_point(p2_10, "56.551", "12.879", 0).
%o_point(p2_11, "58.544", "12.879", 0).
%o_point(p2_12, "60.551", "12.879", 0).
%o_point(p2_13, "62.551", "12.879", 0).

%pos(agent1, 1, p1_1).
%pos(agent1, 2, p1_2).
%pos(agent1, 3, p1_3).
%pos(agent1, 4, p1_4).
%pos(agent1, 5, p1_5).
%pos(agent1, 6, p1_6).
%pos(agent1, 7, p1_7).
%pos(agent1, 8, p1_8).
%pos(agent1, 9, p1_9).
%pos(agent1, 10, p1_10).
%pos(agent1, 11, p1_11).
%pos(agent1, 12, p1_12).
%pos(agent1, 13, p1_13).
%
%o_point(p1_1, "40.551", "12.880", 0).
%o_point(p1_2, "41.551", "12.876", 0).
%o_point(p1_3, "42.551", "12.877", 0).
%o_point(p1_4, "43.551", "12.876", 0).
%o_point(p1_5, "44.551", "12.878", 0).
%o_point(p1_6, "45.551", "12.880", 0).
%o_point(p1_7, "46.551", "12.881", 0).
%o_point(p1_8, "47.551", "12.879", 0).
%o_point(p1_9, "48.551", "12.879", 0).
%o_point(p1_10, "49.551", "12.879", 0).
%o_point(p1_11, "50.544", "12.879", 0).
%o_point(p1_12, "51.551", "12.879", 0).
%o_point(p1_13, "52.551", "12.879", 0).
%
%pos(agent2, 1, p2_1).
%pos(agent2, 2, p2_2).
%pos(agent2, 3, p2_3).
%pos(agent2, 4, p2_4).
%pos(agent2, 5, p2_5).
%pos(agent2, 6, p2_6).
%pos(agent2, 7, p2_7).
%pos(agent2, 8, p2_8).
%pos(agent2, 9, p2_9).
%pos(agent2, 10, p2_10).
%pos(agent2, 11, p2_11).
%pos(agent2, 12, p2_12).
%pos(agent2, 13, p2_13).
%
%o_point(p2_1, "38.551", "12.880", 0).
%o_point(p2_2, "40.551", "12.876", 0).
%o_point(p2_3, "41.551", "12.877", 0).
%o_point(p2_4, "42.551", "12.876", 0).
%o_point(p2_5, "43.551", "12.878", 0).
%o_point(p2_6, "44.551", "12.880", 0).
%o_point(p2_7, "45.551", "12.881", 0).
%o_point(p2_8, "46.551", "12.879", 0).
%o_point(p2_9, "47.551", "12.879", 0).
%o_point(p2_10, "48.551", "12.879", 0).
%o_point(p2_11, "49.544", "12.879", 0).
%o_point(p2_12, "50.551", "12.879", 0).
%o_point(p2_13, "51.551", "12.879", 0).

%%%% Agents %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
agent(agent1).
agent(agent2).

 %%%%%%%%%%%
% Example 1 %%%%%%%%%
 %%%%%%%%%%%

%pos(agent1, 1, p1_1).
%pos(agent1, 2, p1_2).
%pos(agent1, 3, p1_3).
%
%o_point(p1_1, "43.551", "12.800", "0.0").
%o_point(p1_2, "44.551", "12.800", "0.0").
%o_point(p1_3, "45.551", "12.800", "0.0").
%
%o_point(p2_1, "42.551", "12.800", "0.0").
%o_point(p2_2, "46.551", "12.800", "0.0").
%o_point(p2_3, "47.551", "12.800", "0.0").

%{ rule(1, 1..2, 2..3) }.

%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%
% Example 2 %%%%%%%%%
 %%%%%%%%%%%

%pos(agent1, 1, p1_1).
%pos(agent1, 2, p1_2).
%pos(agent1, 3, p1_3).
%pos(agent1, 4, p1_4).
%pos(agent1, 5, p1_5).
%
%o_point(p1_1, "40.551", "12.880", "0.0").
%o_point(p1_2, "41.551", "12.800", "0.0").
%o_point(p1_3, "42.551", "12.800", "0.0").
%o_point(p1_4, "43.551", "12.800", "0.0").
%o_point(p1_5, "44.551", "12.800", "0.0").
%
%pos(agent2, 1, p2_1).
%pos(agent2, 2, p2_2).
%pos(agent2, 3, p2_3).
%pos(agent2, 4, p2_4).
%pos(agent2, 5, p2_5).
%
%o_point(p2_1, "38.551", "12.800", "0.0").
%o_point(p2_2, "40.540", "12.800", "0.0").
%o_point(p2_3, "42.463", "12.800", "0.0").
%o_point(p2_4, "44.508", "12.800", "0.0").
%o_point(p2_5, "46.551", "12.800", "0.0").
%
%{ rule(1, 1..4, 2..5) }.

%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%
% Example 3 %%%%%%%%%
 %%%%%%%%%%%

%pos(agent1, 1, p1_1).
%pos(agent1, 2, p1_2).
%pos(agent1, 3, p1_3).
%pos(agent1, 4, p1_4).
%pos(agent1, 5, p1_5).
%
%o_point(p1_1, "40.551", "12.880", "0.0").
%o_point(p1_2, "41.551", "12.800", "0.0").
%o_point(p1_3, "42.551", "12.800", "0.0").
%o_point(p1_4, "43.551", "12.800", "0.0").
%o_point(p1_5, "44.551", "12.800", "0.0").
%
%pos(agent2, 1, p2_1).
%pos(agent2, 2, p2_2).
%pos(agent2, 3, p2_3).
%pos(agent2, 4, p2_4).
%pos(agent2, 5, p2_5).
%
%o_point(p2_1, "38.551", "12.800", "0.0").
%o_point(p2_2, "40.540", "12.800", "0.0").
%o_point(p2_3, "42.463", "13.800", "0.0"). % one step side-by-side
%o_point(p2_4, "44.508", "12.800", "0.0").
%o_point(p2_5, "46.551", "12.800", "0.0").
%
%{ rule(1, 1..4, 2..5) }.

%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%
% Example 4 %%%%%%%%%
 %%%%%%%%%%%

% this example should lead to unsatisfibility 

pos(agent1, 1, p1_1).
pos(agent1, 2, p1_2).
pos(agent1, 3, p1_3).

o_point(p1_1, "43.551", "12.800", "0.0").
o_point(p1_2, "44.551", "12.800", "0.0").
o_point(p1_3, "45.551", "12.800", "0.0").

o_point(p2_1, "42.551", "12.800", "0.0").
o_point(p2_2, "43.551", "12.800", "0.0").
o_point(p2_3, "44.551", "12.800", "0.0").

{ rule(1, 1..2, 2..3) }.

%%% Background %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% entity can be in two places at the same time point
:- pos(E, T, P1), pos(E, T, P2), P1 != P2.

% from oriented point to point
point(P, X, Y) :- o_point(P, X, Y, _).

behind(E1, E2, T) 
	:- E1 != E2, pos(E1, T, P1), pos(E2, T, P2), o_point(P1, X1, Y1, O1),
	   o_point(P2, X2, Y2, O2), pos(E2, T+1, P3), point(P3, X3, Y3), 
	   @is_behind(X1, Y1, O1, X2, Y2, O2) == 0, @is_collinear(X1, Y1, X2, Y2, X3, Y3) == 0. 
		     		
in_front(E1, E2, T) :- behind(E2, E1, T).

%%% Hypothesis Space %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
overtake(V1, V2, C1) :- behind(V1, V2, C1), in_front(V1, V2, C2), rule(1, C1, C2).

%%% Goal %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
goal :- overtake(agent2, agent1, 1).
:- not goal.


 %  Python % % % % % % % % % % % %
% % % % % % % % % % % % % % % % % 
#script (python)

import math

DEBUG = True

def is_behind(_x1, _y1, _o1, _x2, _y2, _o2):
    # Returns 1 if oriented point (x1, y1, o1) is behind 
    # (x2, y2, o2); -1 otherwise.

    # following the convention in spatial.lp
    x1 = float(_x1.string)
    y1 = float(_y1.string)
    o1 = float(_o1.string)
    x2 = float(_x2.string)
    y2 = float(_y2.string)
    o2 = float(_o2.string)
   
	 
    if DEBUG:
        print "{}, {}, {} | {}, {}, {}".format(x1, y1, o1, x2, y2, o2)	

	    
    ANG_TOLERANCE = 5
    if (o1 != o2 and o1 not in range(o2 - ANG_TOLERANCE, o2 + ANG_TOLERANCE)):
        return 1

    if (o1 in range(0, 90)):
    	if (x1 < x2 or y1 < y2):
  	    return 0
    if (o1 in range(90, 180)):
        if (x1 > x2 or y1 < y2):
            return 0
    if (o1 in range(-180, -90)):
        if (x1 > x2 or y1 > y2):
            return 0
    if (o1 in range(-90, 0)):
        if (x1 < x2 or y1 > y2):
            return 0
    return 1


def is_collinear(_x1, _y1, _x2, _y2, _x3, _y3):
    # Returns 1 if (x1, y1) is collinear with the line 
    # passing through (x2, y2) and (x3, y3); -1 otherwise.
    # Using here the Triangle's Area method: if the area
    # of the triangle formed by the three points is 0 then
    # the three points lie on the same line.

    x1 = float(_x1.string)
    y1 = float(_y1.string)
    x2 = float(_x2.string)
    y2 = float(_y2.string)
    x3 = float(_x3.string)
    y3 = float(_y3.string)

    a = 1/2 * (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2))
    
    if a == 0:
        if DEBUG:	
            print "  Collinear"
        return 0
    return 1

#end.
